#!/usr/bin/env fish

argparse -n yt-compat 'h/help' 's/embed-subs' -- $argv
or return

if set -q _flag_help
    echo "Usage: yt_compat [OPTIONS] <url>"
    echo "Options:"
    echo "  -s, --embed-subs    Burn Spanish/English subtitles"
    echo "  -h, --help          Show help"
    return
end

if test (count $argv) -ne 1
    echo "Error: Requires exactly 1 argument (URL)"
    return 1
end

set url "$argv[1]"
set temp_dir (mktemp -d)

# Nix-safe filename generation
set video_title (yt-dlp --get-title -- "$url" | string replace -ra '[^a-zA-Z0-9]' '_' | string sub -l 50)
set output_name "$video_title"(date +"_%Y%m%d")".mp4"

function try_download
    yt-dlp -f "bestvideo[height<=480]+bestaudio/best" \
        $argv \
        --merge-output-format mp4 \
        --sub-langs "es,en" --write-subs --convert-subs srt \
        -o "$temp_dir/video.%(ext)s" \
        -- "$url"
end

# --- First attempt: with cookies (most reliable for private/age restricted) ---
try_download --cookies-from-browser firefox:~/.librewolf/bixoef6e.default

# Detect video
set downloaded ""
for f in $temp_dir/video.*
    if test -f "$f"
        set downloaded "$f"
        break
    end
end

# --- Fallback: if nothing downloaded, try android client (no cookies) ---
if test -z "$downloaded"
    echo "Retrying with android client (no cookies)..."
    try_download --extractor-args "youtube:player_client=android"

    for f in $temp_dir/video.*
        if test -f "$f"
            set downloaded "$f"
            break
        end
    end
end

# Abort if still nothing
if test -z "$downloaded"
    echo "Error: Download failed, no video file produced"
    rm -rf "$temp_dir"
    return 1
end

# Pick subtitle if requested
set sub_file ""
if set -q _flag_embed_subs
    for lang in es en
        set sub_candidate "$temp_dir/video.$lang.srt"
        if test -f "$sub_candidate"
            set sub_file "$sub_candidate"
            break
        end
    end
end

# --- Encode with FFmpeg ---
if set -q _flag_embed_subs; and test -n "$sub_file"
    ffmpeg -hide_banner -i "$downloaded" \
        -vf "subtitles='$sub_file':force_style='Fontname=Dejavu Sans,OutlineColour=&H40000000,BorderStyle=3'" \
        -tune zerolatency \
        -profile:v main -level 4.0 \
        -preset fast \
        -crf 26 \
        -pix_fmt yuv420p \
        -c:v libx264 \
        -c:a aac -b:a 96k \
        -movflags +faststart \
        -y "$output_name"
else
    ffmpeg -hide_banner -i "$downloaded" \
        -profile:v main -level 4.0 \
        -tune zerolatency \
        -preset medium \
        -crf 26 \
        -pix_fmt yuv420p \
        -c:v libx264 \
        -c:a aac -b:a 96k \
        -movflags +faststart \
        -y "$output_name"
end

# Cleanup
rm -rf "$temp_dir"
echo "Created: "(realpath "$output_name")

