#!/usr/bin/env fish

argparse -n yt-compat 'h/help' 's/embed-subs' 't/title=' -- $argv
or return

if set -q _flag_help
    echo "Usage: yt_compat [OPTIONS] <url>"
    echo "Options:"
    echo "  -s, --embed-subs    Burn Spanish/English subtitles"
    echo "  -t, --title TEXT    Burn artist-title text at top left"
    echo "  -h, --help          Show help"
    return
end

if test (count $argv) -ne 1
    echo "Error: Requires exactly 1 argument (URL)"
    return 1
end

set url "$argv[1]"
set temp_dir (mktemp -d)

# Generate filename based on title or date
if set -q _flag_title
    # Sanitize provided title for filename
    set file_title (echo $_flag_title | string replace -ra '[^a-zA-Z0-9]' '_' | string sub -l 50)
    set output_name "$file_title"(date +"_%Y%m%d")".mp4"
else
    # Use precise timestamp when no title provided
    set output_name (date +"%Y%m%d_%H%M")".mp4"
end

# Download best 480p version
yt-dlp -f "bestvideo[height<=480]+bestaudio" --cookies-from-browser firefox \
    --merge-output-format mp4 \
    --sub-langs "es,en" --write-subs --convert-subs srt \
    -o "$temp_dir/video.mp4" \
    -- "$url"

# Find subtitle file with priority
set sub_file ""
if set -q _flag_embed_subs
    for lang in es en
        set sub_file "$temp_dir/video.$lang.srt"
        if test -f "$sub_file"
            break
        else
            set sub_file ""
        end
    end
end

# Always process through FFmpeg for compatibility
if set -q _flag_embed_subs; and test -n "$sub_file"
    # Build the filter chain
    set filters "curves=m='0/0 0.45/0.3 1/0.6'"
    set filters "$filters,subtitles='$sub_file':force_style='Fontsize=28,Fontname=Roboto,Alignment=10,PrimaryColour=&H00F0F0F0,OutlineColour=&H404040@0.8,BorderStyle=0,Outline=0.6,Shadow=0,Blur=0.3,Italic=1'"
    #    set filters "$filters,drawtext=font='DejaVu Sans':text='freakNix':fontcolor=white@0.6:fontsize=14:x=(w-text_w)/2:y=h-th-10:shadowcolor=black@0.7:shadowx=1:shadowy=1"

    if set -q _flag_title
        set filters "$filters,drawtext=font='Roboto':text='$_flag_title':fontcolor=white@0.7:fontsize=18:x=(w-text_w)/2:y=h-th-10:shadowcolor=black@0.5:shadowx=1:shadowy=1"
    end

    ffmpeg -hide_banner -i "$temp_dir/video.mp4" \
        -vf "$filters" \
        -profile:v baseline -level 3.0 \
        -preset fast \
        -crf 23 \
        -pix_fmt yuv420p \
        -c:v libx264 \
        -c:a aac -q:a 0.9 \
        -movflags +faststart \
        -y "$output_name"
else
    # Process without subtitles but maintain compatibility settings
    ffmpeg -hide_banner -i "$temp_dir/video.mp4" \
        -profile:v main -level 4.0 \
        -preset medium \
        -crf 26 \
        -pix_fmt yuv420p \
        -c:v libx264 \
        -c:a aac -q:a 0.9 \
        -movflags +faststart \
        -y "$output_name"
end

# Cleanup
rm -rf "$temp_dir"
echo "Created: "(realpath "$output_name")
