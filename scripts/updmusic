#!/usr/bin/env bash
source ~/nix/scripts/music_config
trap "echo 'Script interrupted. Exiting...'; exit" SIGINT
cd ~/Music
hall_processed=false
other_playlists=()

for playlist_name in "${!PLAYLISTS[@]}"; do
    # Auto-determine target directory
    if [[ "$playlist_name" == "The Hall" ]]; then
        target_dir="$BASE_DIR/$playlist_name"
        archive_file="$BASE_DIR/$playlist_name/downloaded.txt"

        echo "‚≠ê Priority Download: The Hall"   
        mkdir -p "$target_dir"
        
        yt-dlp --progress \
            --download-archive "$archive_file" \
            -o "$target_dir/%(title)s [%(id)s].%(ext)s" \
            --parse-metadata "%(uploader)s:%(meta_artist)s" \
            "${PLAYLISTS[$playlist_name]}"
        hall_processed=true
    else 
        other_playlists+=("$playlist_name")
    fi
done

for playlist_name in "${other_playlists[@]}"; do
    target_dir="$BASE_DIR/$ARTISTS_DIR/$playlist_name"
    archive_file="$BASE_DIR/$ARTISTS_DIR/downloaded.txt"
    echo "üì• Downloading $playlist_name..."

    mkdir -p "$target_dir"

    # Apply duration filter ONLY to Yo Kaze
    if [[ "$playlist_name" == "Yo Kaze" ]]; then
        yt-dlp --progress \
            --download-archive "$archive_file" \
            -o "$target_dir/%(title)s [%(id)s].%(ext)s" \
            --parse-metadata " $playlist_name: %(meta_artist)s" \
            --match-filter "duration > $MIN_DURATION" \  # Filter here
            "${PLAYLISTS[$playlist_name]}"
    else
      yt-dlp --progress \
          --download-archive "$archive_file" \
          -o "$target_dir/%(title)s [%(id)s].%(ext)s" \
          --parse-metadata " $playlist_name: %(meta_artist)s" \
          "${PLAYLISTS[$playlist_name]}"
    fi
done

# Verify Hall processing
if ! $hall_processed; then
    echo "‚ö†Ô∏è Warning: 'The Hall' playlist not found in config!"
fi
