#!/usr/bin/env bash

case $1 in
    up|down|mute)
        node="@DEFAULT_SINK@"
        type="Volume" ;;
    mute-mic)
        node="@DEFAULT_SOURCE@"
        type="Microphone" ;;
    *)
        echo "Usage: $0 {up|down|mute|mute-mic}"
        exit 2 ;;
esac

{ read vol muted; } <<< $(wpctl get-volume $node | awk '{
    v=int($2*100); m=$3~/MUTED/?1:0; print v,m }')

case $1 in
    up|down)
        wpctl set-mute $node 0 && muted=0
        if [[ $1 == up ]]; then
            new_vol=$((vol + 5))
        else
            new_vol=$((vol - 5))
        fi
        new_vol=$((new_vol < 0 ? 0 : new_vol > 100 ? 100 : new_vol))
        wpctl set-volume $node "$new_vol%"
        vol=$new_vol ;;
    mute*)
        wpctl set-mute $node toggle && muted=$((1 - muted)) ;;
esac

if ((muted)); then
    if [[ $type == "Volume" ]]; then
        symbol="üîá"  # Speaker mute
        msg="$symbol muted"
    else
        symbol="ü§ê"  # Mic mute
        msg="$symbol mic muted"
    fi
    timeout="-t 0"
else
    if [[ $type == "Volume" ]]; then
        if ((vol <= 30)); then
            symbol="üîà"
        elif ((vol <= 60)); then
            symbol="üîâ"
        else
            symbol="üîä"
        fi
        msg="$symbol $vol%"
        # Progress hint for volume
        progress_hint=(-h "int:value:$vol")
    else
        symbol="üé§"  # Active mic
        msg="$symbol mic unmuted"
        # No progress hint for mic
        progress_hint=()
    fi
    timeout="-t 1500"
fi

notify-send -u low \
    -h "string:x-canonical-private-synchronous:${type,,}" \
    "${progress_hint[@]}" \
    "$msg" $timeout
