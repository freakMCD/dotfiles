#!/usr/bin/env bash

source ~/.local/share/linuxfedora

[ ! -r ~/nix/home/config/neomutt/.mbsyncrc ] && exit 0

if ps -C mbsync > /dev/null; then
    exit 0
fi

touch ~/.config/neomutt/.mailsynclast
mbsync -c ~/nix/home/config/neomutt/.mbsyncrc gmail
prefix="${HOME}/.local/share/email/gmail"

for file in "$prefix"/*; do
    folder="${file#"$prefix"/}"
    if [[ "$folder" =~ (INBOX|Github|Interbank) ]]; then
        # Find all unread mail whose file is newer than the last time this script was run
        newemails=$(find "$file"/new -type f -newer ~/.config/neomutt/.mailsynclast 2> /dev/null)

        if [[ -z "$newemails" ]]; then
            continue
        fi

        newcount=$(echo "$newemails" | wc -l)

        # Send notification if there are new mails
        if [ "$newcount" -gt 0 ]; then
            while IFS= read -r newemail; do
                # Ensure newemail is a valid file
                [ ! -f "$newemail" ] && continue

                sender=$(sed -n '/^From: /s/^From: //p' "$newemail" \
                        | perl -pe 'use MIME::EncWords(decode_mimewords); $_=decode_mimewords($_);')
                subject=$(sed -n '/^Subject: /s/^Subject: //p' "$newemail" \
                        | perl -pe 'use MIME::EncWords(decode_mimewords); $_=decode_mimewords($_);')

                # Check if sender and subject are empty to prevent empty notifications
                if [[ -n "$sender" && -n "$subject" ]]; then
                    notify-send -t 30000 "$sender" "$subject"
                fi
            done <<< "$newemails"
        fi
    fi
done
